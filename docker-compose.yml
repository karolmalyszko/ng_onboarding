version: '2'

services:
  redis:
    image: 'redis:alpine'
    container_name: redis
    volumes:
      - 'redis:/data'

  website: &baseimage
    depends_on:
      - 'redis'
      - 'postgres'
    build: .
    environment:
      REDIS_URL: redis://redis:6379
      POSTGRES_DATABASE: 'rails_app'
      POSTGRES_USER: 'ror'
      POSTGRES_PASSWORD: 'QqmKfKu7GJvHs6MbCGmzhHvnCWvhB4yg'
      POSTGRES_HOST: 'postgres'
      RAILS_PUMA_PORT: '3000'
      RAILS_ENV: 'development'
    # dołożyć normalną bazę -> postgres
    # osobny kontener do migracji bazy danych
    # connection-stringi i credentiale w ramach zmiennych środowiskowych; na razie może być w docker-compose, docelowo w .env
#    ports:
#      - '3000:3000'

  run_migrations:
    <<: *baseimage
    command: rake db:migrate
    depends_on:
      - 'postgres'

  nginx:
    build:
      context: nginx/
      dockerfile: Dockerfile
    depends_on:
      - 'website'
    ports:
      - '80:80'

  sidekiq:
    depends_on:
      - 'redis'
    build: .
    command: sidekiq -C config/sidekiq.yml
    environment:
      REDIS_URL: redis://redis:6379

  crono:
    build: .
    command: bundle exec crono
    environment:
      REDIS_URL: redis://redis:6379
      POSTGRES_DATABASE: 'rails_app'
      POSTGRES_USER: 'ror'
      POSTGRES_PASSWORD: 'QqmKfKu7GJvHs6MbCGmzhHvnCWvhB4yg'
      POSTGRES_HOST: 'postgres'
    depends_on:
      - 'postgres'      

  postgres:
    image: 'postgres:10.3-alpine'
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    environment:
      POSTGRES_DATABASE: 'rails_app'
      POSTGRES_USER: 'ror'
      POSTGRES_PASSWORD: 'QqmKfKu7GJvHs6MbCGmzhHvnCWvhB4yg'
      POSTGRES_HOST: 'postgres'

volumes:
  redis:
  postgres:
